{
	"auto_complete":
	{
		"selected_items":
		[
			[
				"hide",
				"hideQueue"
			],
			[
				"previous",
				"previousTrack"
			]
		]
	},
	"buffers":
	[
		{
			"file": "app/index.html",
			"settings":
			{
				"buffer_size": 3730,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/cart/cart.html",
			"settings":
			{
				"buffer_size": 712,
				"line_ending": "Windows"
			}
		},
		{
			"file": "api/fatfree/config.ini",
			"settings":
			{
				"buffer_size": 179,
				"line_ending": "Windows"
			}
		},
		{
			"file": "api/app/controllers/Controller.php",
			"settings":
			{
				"buffer_size": 535,
				"line_ending": "Windows"
			}
		},
		{
			"file": "api/app/models/Product.php",
			"settings":
			{
				"buffer_size": 851,
				"line_ending": "Windows"
			}
		},
		{
			"file": "api/app/models/User.php",
			"settings":
			{
				"buffer_size": 687,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/shop/shop.html",
			"settings":
			{
				"buffer_size": 353,
				"line_ending": "Windows"
			}
		},
		{
			"file": "bower.json",
			"settings":
			{
				"buffer_size": 799,
				"line_ending": "Unix"
			}
		},
		{
			"file": "Gruntfile.js",
			"settings":
			{
				"buffer_size": 14473,
				"line_ending": "Windows"
			}
		},
		{
			"file": "package.json",
			"settings":
			{
				"buffer_size": 2389,
				"line_ending": "Unix"
			}
		},
		{
			"file": "app/app.js",
			"settings":
			{
				"buffer_size": 752,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/cart/cart-directive.html",
			"settings":
			{
				"buffer_size": 1993,
				"line_ending": "Windows"
			}
		},
		{
			"contents": "'use strict';\n\n\nangular.module('ngCart', ['ngCart.directives'])\n\n    .config([function () {\n\n    }])\n\n    .provider('$ngCart', function () {\n        this.$get = function () {\n        };\n    })\n\n    .run(['$rootScope', 'ngCart','ngCartItem', 'store', function ($rootScope, ngCart, ngCartItem, store) {\n\n        $rootScope.$on('ngCart:change', function(){\n            ngCart.$save();\n        });\n\n        if (angular.isObject(store.get('cart'))) {\n            ngCart.$restore(store.get('cart'));\n\n        } else {\n            ngCart.init();\n        }\n\n    }])\n\n    .service('ngCart', ['$rootScope', 'ngCartItem', 'store', function ($rootScope, ngCartItem, store) {\n\n        this.init = function(){\n            this.$cart = {\n                shipping : null,\n                taxRate : null,\n                tax : null,\n                items : []\n            };\n        };\n\n        this.addItem = function (id, name, price, quantity, data) {\n\n            var inCart = this.getItemById(id);\n\n            if (typeof inCart === 'object'){\n                //Update quantity of an item if it's already in the cart\n                inCart.setQuantity(quantity, false);\n                $rootScope.$broadcast('ngCart:itemUpdated', inCart);\n            } else {\n                var newItem = new ngCartItem(id, name, price, quantity, data);\n                this.$cart.items.push(newItem);\n                $rootScope.$broadcast('ngCart:itemAdded', newItem);\n            }\n\n            $rootScope.$broadcast('ngCart:change', {});\n        };\n\n        this.getItemById = function (itemId) {\n            var items = this.getCart().items;\n            var build = false;\n\n            angular.forEach(items, function (item) {\n                if  (item.getId() === itemId) {\n                    build = item;\n                }\n            });\n            return build;\n        };\n\n        this.setShipping = function(shipping){\n            this.$cart.shipping = shipping;\n            return this.getShipping();\n        };\n\n        this.getShipping = function(){\n            if (this.getCart().items.length == 0) return 0;\n            return  this.getCart().shipping;\n        };\n\n        this.setTaxRate = function(taxRate){\n            this.$cart.taxRate = +parseFloat(taxRate).toFixed(2);\n            return this.getTaxRate();\n        };\n\n        this.getTaxRate = function(){\n            return this.$cart.taxRate\n        };\n\n        this.getTax = function(){\n            return +parseFloat(((this.getSubTotal()/100) * this.getCart().taxRate )).toFixed(2);\n        };\n\n        this.setCart = function (cart) {\n            this.$cart = cart;\n            return this.getCart();\n        };\n\n        this.getCart = function(){\n            return this.$cart;\n        };\n\n        this.getItems = function(){\n            return this.getCart().items;\n        };\n\n        this.getTotalItems = function () {\n            var count = 0;\n            var items = this.getItems();\n            angular.forEach(items, function (item) {\n                count += item.getQuantity();\n            });\n            return count;\n        };\n\n        this.getTotalUniqueItems = function () {\n            return this.getCart().items.length;\n        };\n\n        this.getSubTotal = function(){\n            var total = 0;\n            angular.forEach(this.getCart().items, function (item) {\n                total += item.getTotal();\n            });\n            return +parseFloat(total).toFixed(2);\n        };\n\n        this.totalCost = function () {\n            return +parseFloat(this.getSubTotal() + this.getShipping() + this.getTax()).toFixed(2);\n        };\n\n        this.removeItem = function (index) {\n            var item = this.$cart.items.splice(index, 1)[0] || {};\n            $rootScope.$broadcast('ngCart:itemRemoved', item);\n            $rootScope.$broadcast('ngCart:change', {});\n\n        };\n\n        this.removeItemById = function (id) {\n            var item;\n            var cart = this.getCart();\n            angular.forEach(cart.items, function (item, index) {\n                if(item.getId() === id) {\n                    item = cart.items.splice(index, 1)[0] || {};\n                }\n            });\n            this.setCart(cart);\n            $rootScope.$broadcast('ngCart:itemRemoved', item);\n            $rootScope.$broadcast('ngCart:change', {});\n        };\n\n        this.empty = function () {\n            \n            $rootScope.$broadcast('ngCart:change', {});\n            this.$cart.items = [];\n            localStorage.removeItem('cart');\n        };\n        \n        this.isEmpty = function () {\n            \n            return (this.$cart.items.length > 0 ? false : true);\n            \n        };\n\n        this.toObject = function() {\n\n            if (this.getItems().length === 0) return false;\n\n            var items = [];\n            angular.forEach(this.getItems(), function(item){\n                items.push (item.toObject());\n            });\n\n            return {\n                shipping: this.getShipping(),\n                tax: this.getTax(),\n                taxRate: this.getTaxRate(),\n                subTotal: this.getSubTotal(),\n                totalCost: this.totalCost(),\n                items:items\n            }\n        };\n\n\n        this.$restore = function(storedCart){\n            var _self = this;\n            _self.init();\n            _self.$cart.shipping = storedCart.shipping;\n            _self.$cart.tax = storedCart.tax;\n\n            angular.forEach(storedCart.items, function (item) {\n                _self.$cart.items.push(new ngCartItem(item._id,  item._name, item._price, item._quantity, item._data));\n            });\n            this.$save();\n        };\n\n        this.$save = function () {\n            return store.set('cart', JSON.stringify(this.getCart()));\n        }\n\n    }])\n\n    .factory('ngCartItem', ['$rootScope', '$log', function ($rootScope, $log) {\n\n        var item = function (id, name, price, quantity, data) {\n            this.setId(id);\n            this.setName(name);\n            this.setPrice(price);\n            this.setQuantity(quantity);\n            this.setData(data);\n        };\n\n\n        item.prototype.setId = function(id){\n            if (id)  this._id = id;\n            else {\n                $log.error('An ID must be provided');\n            }\n        };\n\n        item.prototype.getId = function(){\n            return this._id;\n        };\n\n\n        item.prototype.setName = function(name){\n            if (name)  this._name = name;\n            else {\n                $log.error('A name must be provided');\n            }\n        };\n        item.prototype.getName = function(){\n            return this._name;\n        };\n\n        item.prototype.setPrice = function(price){\n            var priceFloat = parseFloat(price);\n            if (priceFloat) {\n                if (priceFloat <= 0) {\n                    $log.error('A price must be over 0');\n                } else {\n                    this._price = (priceFloat);\n                }\n            } else {\n                $log.error('A price must be provided');\n            }\n        };\n        item.prototype.getPrice = function(){\n            return this._price;\n        };\n\n\n        item.prototype.setQuantity = function(quantity, relative){\n\n\n            var quantityInt = parseInt(quantity);\n            if (quantityInt % 1 === 0){\n                if (relative === true){\n                    this._quantity  += quantityInt;\n                } else {\n                    this._quantity = quantityInt;\n                }\n                if (this._quantity < 1) this._quantity = 1;\n\n            } else {\n                this._quantity = 1;\n                $log.info('Quantity must be an integer and was defaulted to 1');\n            }\n\n\n        };\n\n        item.prototype.getQuantity = function(){\n            return this._quantity;\n        };\n\n        item.prototype.setData = function(data){\n            if (data) this._data = data;\n        };\n\n        item.prototype.getData = function(){\n            if (this._data) return this._data;\n            else $log.info('This item has no data');\n        };\n\n\n        item.prototype.getTotal = function(){\n            return +parseFloat(this.getQuantity() * this.getPrice()).toFixed(2);\n        };\n\n        item.prototype.toObject = function() {\n            return {\n                id: this.getId(),\n                name: this.getName(),\n                price: this.getPrice(),\n                quantity: this.getQuantity(),\n                data: this.getData(),\n                total: this.getTotal()\n            }\n        };\n\n        return item;\n\n    }])\n\n    .service('store', ['$window', function ($window) {\n\n        return {\n\n            get: function (key) {\n                if ($window.localStorage [key]) {\n                    var cart = angular.fromJson($window.localStorage [key]);\n                    return JSON.parse(cart);\n                }\n                return false;\n\n            },\n\n\n            set: function (key, val) {\n\n                if (val === undefined) {\n                    $window.localStorage .removeItem(key);\n                } else {\n                    $window.localStorage [key] = angular.toJson(val);\n                }\n                return $window.localStorage [key];\n            }\n        }\n    }])\n\n    .controller('CartController',['$scope', 'ngCart', function($scope, ngCart) {\n        $scope.ngCart = ngCart;\n\n    }])\n\n    .value('version', '1.0.0');\n",
			"file": "app/cart/ngCart.js",
			"file_size": 9764,
			"file_write_time": 130940171659540112,
			"settings":
			{
				"buffer_size": 9428,
				"line_ending": "Windows"
			}
		},
		{
			"file": "app/cart/ngCart.directives.js",
			"settings":
			{
				"buffer_size": 3924,
				"line_ending": "Windows"
			}
		}
	],
	"build_system": "",
	"build_system_choices":
	[
	],
	"build_varint": "",
	"command_palette":
	{
		"height": 58.0,
		"last_filter": "",
		"selected_items":
		[
			[
				"install",
				"Package Control: Install Package"
			]
		],
		"width": 400.0
	},
	"console":
	{
		"height": 126.0,
		"history":
		[
			"Package Control: Install Package",
			"import urllib.request,os,hashlib; h = '7183a2d3e96f11eeadd761d777e62404' + 'e330c659d4bb41d3bdf022e94cab3cd0'; pf = 'Package Control.sublime-package'; ipp = sublime.installed_packages_path(); urllib.request.install_opener( urllib.request.build_opener( urllib.request.ProxyHandler()) ); by = urllib.request.urlopen( 'http://packagecontrol.io/' + pf.replace(' ', '%20')).read(); dh = hashlib.sha256(by).hexdigest(); print('Error validating download (got %s instead of %s), please try manual install' % (dh, h)) if dh != h else open(os.path.join( ipp, pf), 'wb' ).write(by)"
		]
	},
	"distraction_free":
	{
		"menu_visible": true,
		"show_minimap": false,
		"show_open_files": false,
		"show_tabs": false,
		"side_bar_visible": false,
		"status_bar_visible": false
	},
	"expanded_folders":
	[
		"/H/Git/BandJam/site-base",
		"/H/Git/BandJam/site-base/api/app",
		"/H/Git/BandJam/site-base/api/app/controllers",
		"/H/Git/BandJam/site-base/api/app/models",
		"/H/Git/BandJam/site-base/api/fatfree",
		"/H/Git/BandJam/site-base/app",
		"/H/Git/BandJam/site-base/app/cart",
		"/H/Git/BandJam/site-base/app/common",
		"/H/Git/BandJam/site-base/app/shop"
	],
	"file_history":
	[
		"/E/Git/Jamstash/app/styles/Style.css",
		"/E/Git/Jamstash/app/player/player.html",
		"/E/Git/Jamstash/app/player/player.css",
		"//web02/www/wp-content/themes/motif/style.css",
		"/C/Users/Trevor/AppData/Roaming/Sublime Text 3/Packages/Package Control/Package Control.sublime-settings",
		"//web02/www/wp-content/themes/motif/header.php",
		"//web02/www/wp-content/themes/motif/footer.php",
		"//web02/www/wp-content/themes/motif/functions.php",
		"//web02/www/wp-content/themes/motif/sidebar-front-page.php",
		"//web02/www/wp-content/themes/motif/content.php",
		"/E/Git/Jamstash/app/subsonic/subsonic-service.js",
		"/C/Users/Trevor/AppData/Roaming/Sublime Text 3/Packages/User/Default (Windows).sublime-keymap",
		"/E/Git/Jamstash/app/player/player-directive_test.js",
		"/E/Git/Jamstash/app/player/player-service.js",
		"/E/Git/Jamstash/app/styles/Mobile.css",
		"/E/Git/Jamstash/app/settings/settings-service.js",
		"/E/Git/Jamstash/app/subsonic/subsonic.html",
		"/E/Git/Jamstash/app/archive/archive.js",
		"/E/Git/Jamstash/app/common/json_changelog.json",
		"/E/Git/Jamstash/app/styles/Dark.css",
		"/E/Git/Jamstash/app/common/player-service.js",
		"/E/Git/Jamstash/package.json",
		"/E/Git/Jamstash/app/vendor/jquery-split-pane.js",
		"/E/Git/Jamstash/app/index.html",
		"/E/Git/Jamstash/Gruntfile.js",
		"/E/Git/Jamstash/app/subsonic/subsonic.js",
		"/E/Git/Jamstash/app/common/main-controller.js",
		"/E/Git/Jamstash/app/archive/archive.html",
		"/E/Git/Jamstash/app/archive/archive-service.js",
		"/E/Git/Jamstash/app/common/notification-service.js",
		"/E/Git/Jamstash/app/settings/settings.js",
		"/D/GDrive/Projects/Jamstash/Scripts/cpGitToDev.bat",
		"/D/GDrive/Projects/Jamstash/Scripts/cpGitToWebTest.bat",
		"/D/GDrive/Projects/Jamstash/Scripts/gitPushDev.bat",
		"/D/GDrive/Projects/Jamstash/Scripts/redDevBeta.bat",
		"/D/Git/Jamstash/app/common/json_changelog.json",
		"/D/Git/Jamstash/app/styles/Mobile.css",
		"/D/Git/Jamstash/app/common/main-controller.js",
		"/D/Git/Jamstash/app/index.html",
		"/D/Git/Jamstash/bower.json",
		"/D/Git/Jamstash/package.json",
		"/D/Git/Jamstash/karma.conf.js",
		"/D/Git/Jamstash/Gruntfile.js",
		"/D/Git/Jamstash/app/common/songs.html",
		"/D/Git/Jamstash/app/common/message.html",
		"/D/Git/Jamstash/app/common/utils-service.js",
		"/D/Git/Jamstash/app/subsonic/subsonic.html",
		"/D/Git/Jamstash/app/common/background.js",
		"/D/Git/Jamstash/app/common/player-service.js",
		"/D/Git/Jamstash/manifest.json",
		"/D/GDrive/Projects/Jamstash/Scripts/gitPull.php",
		"/D/Git/Jamstash/app/common/directives.js",
		"/D/GDrive/Projects/Jamstash/Scripts/deploy_git.ps1",
		"/D/Git/Jamstash/app/archive/archive.html",
		"/D/Git/Jamstash/app/common/model-service.js"
	],
	"find":
	{
		"height": 34.0
	},
	"find_in_files":
	{
		"height": 90.0,
		"where_history":
		[
			"E:\\Git\\Jamstash\\app",
			"\\\\web02\\www\\wp-content\\themes\\motif",
			"E:\\Git\\Jamstash\\app",
			"D:\\GDrive\\Projects\\Jamstash\\Scripts,*.bat",
			"D:\\GDrive\\Projects\\Jamstash\\Scripts\\*.bat",
			"D:\\GDrive\\Projects\\Jamstash\\Scripts",
			"E:\\Git\\Jamstash\\app",
			"D:\\Git\\Jamstash\\app",
			"D:\\Git\\Jamstash",
			"D:\\Git\\Jamstash\\app",
			"D:\\Git\\Jamstash",
			"D:\\Git\\Jamstash\\app"
		]
	},
	"find_state":
	{
		"case_sensitive": false,
		"find_history":
		[
			"cart.html",
			"icon-wrap",
			"wrap",
			"icon-wrap",
			"songdetails_controls",
			"ins",
			"rss",
			"3D3D3D",
			"widget-title",
			".front-widget-area .widget, .sidebar-widget-area .widget",
			"pop",
			"popwidget",
			"entry-title",
			"widget-title",
			"entry-title",
			"widget-title",
			"main-navigation",
			".site",
			"box-shadow",
			".widget",
			"transition",
			".hero-content-overlayer",
			"Open Sans",
			"Droid Sans",
			"serif",
			"Open Sans",
			"Droid Sans",
			"font-family",
			"main-navig",
			".site",
			".widget",
			"entry-header",
			"entry-thumbnail",
			".front-page-content-area .with-featured-image .hentry",
			"site-brand",
			".footer-widget-area .search-field",
			"site-bran",
			".site",
			"footer-",
			".first.front-widgets",
			"h2",
			"li",
			"widget-title",
			".front-widget-area",
			".front-widget-area,",
			".first.front-widgets",
			".front-page-content-area .with-featured-image .hentry",
			".hero-content-overlayer",
			".front-page-content-area .with-featured-image .hentry",
			"front-page-content-area",
			"with-featured-image",
			"featured",
			"entry-title",
			"main-nav",
			"entry-content",
			"font-fam",
			".single .entry-title, .page .entry-title",
			".entry-meta span",
			".entry-meta .comments-link",
			".widget",
			".front-page-content-area .hero",
			".front-widgets",
			"secondary",
			"sidebar",
			".first.front-widgets",
			".front-widgets .widget",
			".first.front-widgets",
			"^.widget",
			".widget",
			".entry-meta .date",
			".gallery",
			"comment-respond",
			"respond",
			".comment-respond",
			"input",
			"textarea",
			"input",
			"search-field",
			"main-navig",
			"border: 1px solid #ddd;",
			"box-shadow: rgba(0,0,0, 0.2) 0px 1px 2px;",
			"box-shadow",
			"turnVolumeUp",
			"volume",
			"getartists",
			"content.songs",
			"getalbums",
			"scope.song",
			"offset",
			"sortSubsonicAlbums",
			"getAlbums",
			"sortSubsonicAlbums",
			"genre",
			"SelectedAlbumSort",
			"getAlbums",
			"subsonicRequest",
			"watch",
			"if the player service's loadSong flag is true, it does not",
			"sortSubsonicAlbums",
			"subsonicRequest",
			"sortSubsonicAlbums",
			"sort",
			"getRandomStarredSongs",
			"getStarred",
			"getstarred",
			"playlist",
			"when the player service's",
			"jplayer",
			"jplayer directive",
			"sortSubsonicSongs",
			"sortSubsonicAlbums",
			"sortSubsonicSongs",
			"subsonic.",
			"song",
			"SelectedAlbumSort",
			"sort",
			"sortalbum",
			"So",
			"restart",
			"playPauseSong",
			"ping",
			"BaseParams",
			"globals.BaseParams",
			"scope.ping",
			"ping",
			"ping(",
			"ApiVersion",
			"ping"
		],
		"highlight": true,
		"in_selection": false,
		"preserve_case": false,
		"regex": false,
		"replace_history":
		[
			"Drois Sans",
			"Noto Sans",
			"Droid Sans",
			"Open Sans",
			"border: 1px solid #D3D3D3;",
			"/*box-shadow: rgba(0,0,0, 0.2) 0px 1px 2px;*/",
			"this.sortSubsonicAlbums",
			"E:\\Git",
			"$rootScope.showIndex",
			"Artists",
			""
		],
		"reverse": false,
		"show_context": true,
		"use_buffer2": true,
		"whole_word": false,
		"wrap": true
	},
	"groups":
	[
		{
			"selected": 9,
			"sheets":
			[
				{
					"buffer": 0,
					"file": "app/index.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3730,
						"regions":
						{
						},
						"selection":
						[
							[
								3239,
								3239
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 684.0,
						"zoom_level": 1.0
					},
					"stack_index": 3,
					"type": "text"
				},
				{
					"buffer": 1,
					"file": "app/cart/cart.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 712,
						"regions":
						{
						},
						"selection":
						[
							[
								81,
								81
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 9,
					"type": "text"
				},
				{
					"buffer": 2,
					"file": "api/fatfree/config.ini",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 179,
						"regions":
						{
						},
						"selection":
						[
							[
								178,
								178
							]
						],
						"settings":
						{
							"syntax": "Packages/Text/Plain text.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 8,
					"type": "text"
				},
				{
					"buffer": 3,
					"file": "api/app/controllers/Controller.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 535,
						"regions":
						{
						},
						"selection":
						[
							[
								507,
								507
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 7,
					"type": "text"
				},
				{
					"buffer": 4,
					"file": "api/app/models/Product.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 851,
						"regions":
						{
						},
						"selection":
						[
							[
								126,
								126
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 6,
					"type": "text"
				},
				{
					"buffer": 5,
					"file": "api/app/models/User.php",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 687,
						"regions":
						{
						},
						"selection":
						[
							[
								120,
								120
							]
						],
						"settings":
						{
							"syntax": "Packages/PHP/PHP.tmLanguage",
							"translate_tabs_to_spaces": false
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 5,
					"type": "text"
				},
				{
					"buffer": 6,
					"file": "app/shop/shop.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 353,
						"regions":
						{
						},
						"selection":
						[
							[
								213,
								213
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage"
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 4,
					"type": "text"
				},
				{
					"buffer": 7,
					"file": "bower.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 799,
						"regions":
						{
						},
						"selection":
						[
							[
								727,
								727
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 2,
					"type": "text"
				},
				{
					"buffer": 8,
					"file": "Gruntfile.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 14473,
						"regions":
						{
						},
						"selection":
						[
							[
								2667,
								2667
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 1147.0,
						"zoom_level": 1.0
					},
					"stack_index": 1,
					"type": "text"
				},
				{
					"buffer": 9,
					"file": "package.json",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 2389,
						"regions":
						{
						},
						"selection":
						[
							[
								968,
								969
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JSON.tmLanguage",
							"tab_size": 2,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 102.0,
						"zoom_level": 1.0
					},
					"stack_index": 0,
					"type": "text"
				},
				{
					"buffer": 10,
					"file": "app/app.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 752,
						"regions":
						{
						},
						"selection":
						[
							[
								697,
								697
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 13,
					"type": "text"
				},
				{
					"buffer": 11,
					"file": "app/cart/cart-directive.html",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 1993,
						"regions":
						{
						},
						"selection":
						[
							[
								248,
								248
							]
						],
						"settings":
						{
							"syntax": "Packages/HTML/HTML.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 12,
					"type": "text"
				},
				{
					"buffer": 12,
					"file": "app/cart/ngCart.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 9428,
						"regions":
						{
						},
						"selection":
						[
							[
								557,
								557
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 0.0,
						"zoom_level": 1.0
					},
					"stack_index": 11,
					"type": "text"
				},
				{
					"buffer": 13,
					"file": "app/cart/ngCart.directives.js",
					"semi_transient": false,
					"settings":
					{
						"buffer_size": 3924,
						"regions":
						{
						},
						"selection":
						[
							[
								1782,
								1782
							]
						],
						"settings":
						{
							"syntax": "Packages/JavaScript/JavaScript.tmLanguage",
							"tab_size": 4,
							"translate_tabs_to_spaces": true
						},
						"translation.x": 0.0,
						"translation.y": 420.0,
						"zoom_level": 1.0
					},
					"stack_index": 10,
					"type": "text"
				}
			]
		}
	],
	"incremental_find":
	{
		"height": 22.0
	},
	"input":
	{
		"height": 31.0
	},
	"layout":
	{
		"cells":
		[
			[
				0,
				0,
				1,
				1
			]
		],
		"cols":
		[
			0.0,
			1.0
		],
		"rows":
		[
			0.0,
			1.0
		]
	},
	"menu_visible": true,
	"output.find_results":
	{
		"height": 0.0
	},
	"pinned_build_system": "",
	"project": "site.sublime-project",
	"replace":
	{
		"height": 40.0
	},
	"save_all_on_build": true,
	"select_file":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_project":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"select_symbol":
	{
		"height": 0.0,
		"last_filter": "",
		"selected_items":
		[
		],
		"width": 0.0
	},
	"selected_group": 0,
	"settings":
	{
	},
	"show_minimap": true,
	"show_open_files": false,
	"show_tabs": true,
	"side_bar_visible": true,
	"side_bar_width": 257.0,
	"status_bar_visible": true,
	"template_settings":
	{
	}
}
